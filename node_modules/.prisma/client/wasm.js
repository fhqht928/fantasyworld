
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  username: 'username',
  password: 'password',
  positionX: 'positionX',
  positionY: 'positionY',
  reputation: 'reputation',
  notoriety: 'notoriety',
  maxHp: 'maxHp',
  maxMp: 'maxMp',
  isOnline: 'isOnline'
};

exports.Prisma.NPCScalarFieldEnum = {
  id: 'id',
  name: 'name',
  gender: 'gender',
  birthYear: 'birthYear',
  deathYear: 'deathYear',
  isAlive: 'isAlive',
  mood: 'mood',
  fame: 'fame',
  notoriety: 'notoriety',
  cityId: 'cityId',
  partnerId: 'partnerId',
  parent1Id: 'parent1Id',
  parent2Id: 'parent2Id',
  isNoble: 'isNoble',
  nobleTitle: 'nobleTitle',
  personality: 'personality',
  background: 'background',
  job: 'job',
  skills: 'skills',
  languageId: 'languageId',
  religionId: 'religionId'
};

exports.Prisma.CityScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  population: 'population',
  countryId: 'countryId'
};

exports.Prisma.CountryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  language: 'language'
};

exports.Prisma.WildAreaScalarFieldEnum = {
  id: 'id',
  name: 'name',
  type: 'type',
  dangerLevel: 'dangerLevel',
  countryId: 'countryId',
  cityId: 'cityId'
};

exports.Prisma.DungeonScalarFieldEnum = {
  id: 'id',
  name: 'name',
  levelRequirement: 'levelRequirement',
  isRaid: 'isRaid',
  countryId: 'countryId',
  cityId: 'cityId'
};

exports.Prisma.QuestScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  isTaken: 'isTaken',
  takenAt: 'takenAt',
  completedAt: 'completedAt',
  reputationRequired: 'reputationRequired',
  notorietyTrigger: 'notorietyTrigger',
  issuerId: 'issuerId',
  takerId: 'takerId',
  bountyTargetId: 'bountyTargetId',
  metadata: 'metadata'
};

exports.Prisma.PlayerProfessionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  type: 'type',
  skillLevel: 'skillLevel',
  experience: 'experience'
};

exports.Prisma.ItemScalarFieldEnum = {
  id: 'id',
  name: 'name',
  quality: 'quality'
};

exports.Prisma.ItemInstanceScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  itemId: 'itemId',
  quantity: 'quantity'
};

exports.Prisma.RecipeScalarFieldEnum = {
  id: 'id',
  name: 'name',
  profession: 'profession',
  difficulty: 'difficulty',
  productId: 'productId'
};

exports.Prisma.RecipeMaterialScalarFieldEnum = {
  id: 'id',
  recipeId: 'recipeId',
  itemId: 'itemId',
  quantity: 'quantity'
};

exports.Prisma.CorpseScalarFieldEnum = {
  id: 'id',
  npcId: 'npcId',
  userId: 'userId',
  type: 'type',
  decayStage: 'decayStage',
  location: 'location',
  causeOfDeath: 'causeOfDeath',
  isWaterlogged: 'isWaterlogged',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AnimalPopulationScalarFieldEnum = {
  id: 'id',
  species: 'species',
  type: 'type',
  population: 'population',
  areaId: 'areaId'
};

exports.Prisma.LanguageScalarFieldEnum = {
  id: 'id',
  name: 'name',
  isAncient: 'isAncient',
  region: 'region'
};

exports.Prisma.UserLanguageScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  languageId: 'languageId',
  fluency: 'fluency'
};

exports.Prisma.ReligionScalarFieldEnum = {
  id: 'id',
  name: 'name',
  originRegion: 'originRegion',
  description: 'description',
  doctrine: 'doctrine',
  influenceLevel: 'influenceLevel',
  estimatedFollowers: 'estimatedFollowers'
};

exports.Prisma.ArtifactScalarFieldEnum = {
  id: 'id',
  name: 'name',
  lore: 'lore',
  powerHint: 'powerHint',
  religionId: 'religionId'
};

exports.Prisma.GlobalEventScalarFieldEnum = {
  id: 'id',
  title: 'title',
  type: 'type',
  affectedRegion: 'affectedRegion',
  description: 'description',
  durationDays: 'durationDays',
  impact: 'impact',
  isActive: 'isActive',
  startedAt: 'startedAt',
  endedAt: 'endedAt'
};

exports.Prisma.WeatherScalarFieldEnum = {
  id: 'id',
  cityId: 'cityId',
  condition: 'condition',
  updatedAt: 'updatedAt'
};

exports.Prisma.NPCStoryScalarFieldEnum = {
  id: 'id',
  npcId: 'npcId',
  title: 'title',
  summary: 'summary',
  createdAt: 'createdAt'
};

exports.Prisma.PlayerTitleScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  type: 'type',
  region: 'region',
  grantedAt: 'grantedAt',
  authority: 'authority'
};

exports.Prisma.EconomyScalarFieldEnum = {
  id: 'id',
  cityId: 'cityId',
  item: 'item',
  price: 'price',
  demand: 'demand',
  supply: 'supply'
};

exports.Prisma.WorldTimeScalarFieldEnum = {
  id: 'id',
  lastSimulated: 'lastSimulated'
};

exports.Prisma.WorldSnapshotScalarFieldEnum = {
  id: 'id',
  label: 'label',
  jsonData: 'jsonData',
  createdAt: 'createdAt'
};

exports.Prisma.TaxPolicyScalarFieldEnum = {
  id: 'id',
  region: 'region',
  rate: 'rate',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};


exports.Prisma.ModelName = {
  User: 'User',
  NPC: 'NPC',
  City: 'City',
  Country: 'Country',
  WildArea: 'WildArea',
  Dungeon: 'Dungeon',
  Quest: 'Quest',
  PlayerProfession: 'PlayerProfession',
  Item: 'Item',
  ItemInstance: 'ItemInstance',
  Recipe: 'Recipe',
  RecipeMaterial: 'RecipeMaterial',
  Corpse: 'Corpse',
  AnimalPopulation: 'AnimalPopulation',
  Language: 'Language',
  UserLanguage: 'UserLanguage',
  Religion: 'Religion',
  Artifact: 'Artifact',
  GlobalEvent: 'GlobalEvent',
  Weather: 'Weather',
  NPCStory: 'NPCStory',
  PlayerTitle: 'PlayerTitle',
  Economy: 'Economy',
  WorldTime: 'WorldTime',
  WorldSnapshot: 'WorldSnapshot',
  TaxPolicy: 'TaxPolicy'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "D:\\World\\node_modules\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "D:\\World\\prisma\\schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id         Int                @id @default(autoincrement())\n  username   String             @unique\n  password   String\n  positionX  Float              @default(0)\n  positionY  Float              @default(0)\n  reputation Int                @default(0)\n  notoriety  Int                @default(0)\n  maxHp      Int                @default(100)\n  maxMp      Int                @default(50)\n  isOnline   Boolean            @default(false)\n  profession PlayerProfession[]\n  inventory  ItemInstance[]\n  titles     PlayerTitle[]\n  languages  UserLanguage[]\n  quests     Quest[]            @relation(\"UserQuests\")\n}\n\nmodel NPC {\n  id          Int        @id @default(autoincrement())\n  name        String\n  gender      String\n  birthYear   Int\n  deathYear   Int?\n  isAlive     Boolean    @default(true)\n  mood        String\n  fame        Int        @default(0)\n  notoriety   Int        @default(0)\n  cityId      Int\n  city        City       @relation(\"CityNPCs\", fields: [cityId], references: [id])\n  partnerId   Int?\n  parent1Id   Int?\n  parent2Id   Int?\n  isNoble     Boolean    @default(false)\n  nobleTitle  String?\n  personality String?\n  background  String\n  job         String\n  skills      String\n  languageId  Int\n  language    Language   @relation(fields: [languageId], references: [id])\n  religionId  Int?\n  religion    Religion?  @relation(fields: [religionId], references: [id])\n  stories     NPCStory[]\n  quests      Quest[]    @relation(\"IssuerQuests\")\n}\n\nmodel City {\n  id          Int        @id @default(autoincrement())\n  name        String\n  description String\n  population  Int\n  countryId   Int\n  country     Country    @relation(fields: [countryId], references: [id])\n  wildAreas   WildArea[]\n  dungeons    Dungeon[]\n  weather     Weather?\n  npcs        NPC[]      @relation(\"CityNPCs\")\n  economies   Economy[]\n}\n\nmodel Country {\n  id          Int        @id @default(autoincrement())\n  name        String\n  description String\n  language    String\n  cities      City[]\n  wildAreas   WildArea[]\n  dungeons    Dungeon[]\n}\n\nmodel WildArea {\n  id          Int                @id @default(autoincrement())\n  name        String\n  type        String\n  dangerLevel Int\n  countryId   Int\n  country     Country            @relation(fields: [countryId], references: [id])\n  populations AnimalPopulation[]\n  cityId      Int?\n  city        City?              @relation(fields: [cityId], references: [id])\n}\n\nmodel Dungeon {\n  id               Int     @id @default(autoincrement())\n  name             String\n  levelRequirement Int\n  isRaid           Boolean\n  countryId        Int\n  country          Country @relation(fields: [countryId], references: [id])\n  cityId           Int?\n  city             City?   @relation(fields: [cityId], references: [id])\n}\n\nmodel Quest {\n  id                 Int       @id @default(autoincrement())\n  title              String\n  description        String\n  isTaken            Boolean   @default(false)\n  takenAt            DateTime?\n  completedAt        DateTime?\n  reputationRequired Int\n  notorietyTrigger   Boolean\n  issuerId           Int?\n  issuer             NPC?      @relation(\"IssuerQuests\", fields: [issuerId], references: [id])\n  takerId            Int?\n  taker              User?     @relation(\"UserQuests\", fields: [takerId], references: [id])\n  bountyTargetId     Int?\n  metadata           Json?\n}\n\nmodel PlayerProfession {\n  id         Int    @id @default(autoincrement())\n  userId     Int\n  user       User   @relation(fields: [userId], references: [id])\n  type       String\n  skillLevel Int    @default(1)\n  experience Int    @default(0)\n}\n\nmodel Item {\n  id               Int              @id @default(autoincrement())\n  name             String\n  quality          Int\n  instances        ItemInstance[]\n  recipesAsProduct Recipe[]         @relation(\"ProductItem\")\n  recipeMaterials  RecipeMaterial[] @relation(\"MaterialItem\")\n}\n\nmodel ItemInstance {\n  id       Int  @id @default(autoincrement())\n  userId   Int\n  user     User @relation(fields: [userId], references: [id])\n  itemId   Int\n  item     Item @relation(fields: [itemId], references: [id])\n  quantity Int\n}\n\nmodel Recipe {\n  id         Int              @id @default(autoincrement())\n  name       String\n  profession String\n  difficulty Int\n  productId  Int\n  product    Item             @relation(\"ProductItem\", fields: [productId], references: [id])\n  materials  RecipeMaterial[]\n}\n\nmodel RecipeMaterial {\n  id       Int    @id @default(autoincrement())\n  recipeId Int\n  recipe   Recipe @relation(fields: [recipeId], references: [id])\n  itemId   Int\n  item     Item   @relation(\"MaterialItem\", fields: [itemId], references: [id])\n  quantity Int\n}\n\nmodel Corpse {\n  id            Int      @id @default(autoincrement())\n  npcId         Int?\n  userId        Int?\n  type          String\n  decayStage    String\n  location      String\n  causeOfDeath  String?\n  isWaterlogged Boolean  @default(false)\n  createdAt     DateTime @default(now())\n  updatedAt     DateTime @updatedAt\n}\n\nmodel AnimalPopulation {\n  id         Int      @id @default(autoincrement())\n  species    String\n  type       String\n  population Int\n  areaId     Int\n  area       WildArea @relation(fields: [areaId], references: [id])\n}\n\nmodel Language {\n  id            Int            @id @default(autoincrement())\n  name          String         @unique\n  isAncient     Boolean        @default(false)\n  region        String?\n  speakers      NPC[]\n  userLanguages UserLanguage[]\n}\n\nmodel UserLanguage {\n  id         Int      @id @default(autoincrement())\n  userId     Int\n  user       User     @relation(fields: [userId], references: [id])\n  languageId Int\n  language   Language @relation(fields: [languageId], references: [id])\n  fluency    Int\n}\n\nmodel Religion {\n  id                 Int        @id @default(autoincrement())\n  name               String\n  originRegion       String\n  description        String\n  doctrine           String\n  influenceLevel     Int\n  estimatedFollowers Int\n  artifacts          Artifact[]\n  followers          NPC[]\n}\n\nmodel Artifact {\n  id         Int      @id @default(autoincrement())\n  name       String\n  lore       String\n  powerHint  String\n  religionId Int\n  religion   Religion @relation(fields: [religionId], references: [id])\n}\n\nmodel GlobalEvent {\n  id             Int       @id @default(autoincrement())\n  title          String\n  type           String\n  affectedRegion String\n  description    String\n  durationDays   Int\n  impact         String\n  isActive       Boolean   @default(true)\n  startedAt      DateTime\n  endedAt        DateTime?\n}\n\nmodel Weather {\n  id        Int      @id @default(autoincrement())\n  cityId    Int      @unique\n  city      City     @relation(fields: [cityId], references: [id])\n  condition String\n  updatedAt DateTime\n}\n\nmodel NPCStory {\n  id        Int      @id @default(autoincrement())\n  npcId     Int\n  npc       NPC      @relation(fields: [npcId], references: [id])\n  title     String\n  summary   String\n  createdAt DateTime @default(now())\n}\n\nmodel PlayerTitle {\n  id        Int      @id @default(autoincrement())\n  userId    Int\n  user      User     @relation(fields: [userId], references: [id])\n  type      String\n  region    String\n  grantedAt DateTime\n  authority Int\n}\n\nmodel Economy {\n  id     Int    @id @default(autoincrement())\n  cityId Int\n  city   City   @relation(fields: [cityId], references: [id])\n  item   String\n  price  Int\n  demand String\n  supply String\n\n  @@unique([cityId, item], name: \"cityId_item\")\n}\n\nmodel WorldTime {\n  id            Int      @id @default(autoincrement())\n  lastSimulated DateTime\n}\n\nmodel WorldSnapshot {\n  id        Int      @id @default(autoincrement())\n  label     String\n  jsonData  Json\n  createdAt DateTime @default(now())\n}\n\nmodel TaxPolicy {\n  id        Int      @id @default(autoincrement())\n  region    String   @unique\n  rate      Int\n  updatedAt DateTime\n}\n",
  "inlineSchemaHash": "a56aaf3baebc2005aece0329f550bb69757588c8305da072972d83eac6157b4f",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"positionX\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"positionY\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"reputation\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"notoriety\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"maxHp\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"maxMp\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isOnline\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"profession\",\"kind\":\"object\",\"type\":\"PlayerProfession\",\"relationName\":\"PlayerProfessionToUser\"},{\"name\":\"inventory\",\"kind\":\"object\",\"type\":\"ItemInstance\",\"relationName\":\"ItemInstanceToUser\"},{\"name\":\"titles\",\"kind\":\"object\",\"type\":\"PlayerTitle\",\"relationName\":\"PlayerTitleToUser\"},{\"name\":\"languages\",\"kind\":\"object\",\"type\":\"UserLanguage\",\"relationName\":\"UserToUserLanguage\"},{\"name\":\"quests\",\"kind\":\"object\",\"type\":\"Quest\",\"relationName\":\"UserQuests\"}],\"dbName\":null},\"NPC\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gender\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"birthYear\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"deathYear\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isAlive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"mood\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fame\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"notoriety\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"cityId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"city\",\"kind\":\"object\",\"type\":\"City\",\"relationName\":\"CityNPCs\"},{\"name\":\"partnerId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"parent1Id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"parent2Id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isNoble\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"nobleTitle\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"personality\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"background\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"job\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"skills\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"languageId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"language\",\"kind\":\"object\",\"type\":\"Language\",\"relationName\":\"LanguageToNPC\"},{\"name\":\"religionId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"religion\",\"kind\":\"object\",\"type\":\"Religion\",\"relationName\":\"NPCToReligion\"},{\"name\":\"stories\",\"kind\":\"object\",\"type\":\"NPCStory\",\"relationName\":\"NPCToNPCStory\"},{\"name\":\"quests\",\"kind\":\"object\",\"type\":\"Quest\",\"relationName\":\"IssuerQuests\"}],\"dbName\":null},\"City\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"population\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"countryId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"country\",\"kind\":\"object\",\"type\":\"Country\",\"relationName\":\"CityToCountry\"},{\"name\":\"wildAreas\",\"kind\":\"object\",\"type\":\"WildArea\",\"relationName\":\"CityToWildArea\"},{\"name\":\"dungeons\",\"kind\":\"object\",\"type\":\"Dungeon\",\"relationName\":\"CityToDungeon\"},{\"name\":\"weather\",\"kind\":\"object\",\"type\":\"Weather\",\"relationName\":\"CityToWeather\"},{\"name\":\"npcs\",\"kind\":\"object\",\"type\":\"NPC\",\"relationName\":\"CityNPCs\"},{\"name\":\"economies\",\"kind\":\"object\",\"type\":\"Economy\",\"relationName\":\"CityToEconomy\"}],\"dbName\":null},\"Country\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"language\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cities\",\"kind\":\"object\",\"type\":\"City\",\"relationName\":\"CityToCountry\"},{\"name\":\"wildAreas\",\"kind\":\"object\",\"type\":\"WildArea\",\"relationName\":\"CountryToWildArea\"},{\"name\":\"dungeons\",\"kind\":\"object\",\"type\":\"Dungeon\",\"relationName\":\"CountryToDungeon\"}],\"dbName\":null},\"WildArea\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dangerLevel\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"countryId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"country\",\"kind\":\"object\",\"type\":\"Country\",\"relationName\":\"CountryToWildArea\"},{\"name\":\"populations\",\"kind\":\"object\",\"type\":\"AnimalPopulation\",\"relationName\":\"AnimalPopulationToWildArea\"},{\"name\":\"cityId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"city\",\"kind\":\"object\",\"type\":\"City\",\"relationName\":\"CityToWildArea\"}],\"dbName\":null},\"Dungeon\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"levelRequirement\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isRaid\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"countryId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"country\",\"kind\":\"object\",\"type\":\"Country\",\"relationName\":\"CountryToDungeon\"},{\"name\":\"cityId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"city\",\"kind\":\"object\",\"type\":\"City\",\"relationName\":\"CityToDungeon\"}],\"dbName\":null},\"Quest\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isTaken\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"takenAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"reputationRequired\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"notorietyTrigger\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"issuerId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"issuer\",\"kind\":\"object\",\"type\":\"NPC\",\"relationName\":\"IssuerQuests\"},{\"name\":\"takerId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"taker\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserQuests\"},{\"name\":\"bountyTargetId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"}],\"dbName\":null},\"PlayerProfession\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PlayerProfessionToUser\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"skillLevel\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"experience\",\"kind\":\"scalar\",\"type\":\"Int\"}],\"dbName\":null},\"Item\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quality\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"instances\",\"kind\":\"object\",\"type\":\"ItemInstance\",\"relationName\":\"ItemToItemInstance\"},{\"name\":\"recipesAsProduct\",\"kind\":\"object\",\"type\":\"Recipe\",\"relationName\":\"ProductItem\"},{\"name\":\"recipeMaterials\",\"kind\":\"object\",\"type\":\"RecipeMaterial\",\"relationName\":\"MaterialItem\"}],\"dbName\":null},\"ItemInstance\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ItemInstanceToUser\"},{\"name\":\"itemId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"item\",\"kind\":\"object\",\"type\":\"Item\",\"relationName\":\"ItemToItemInstance\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"}],\"dbName\":null},\"Recipe\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"profession\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"difficulty\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Item\",\"relationName\":\"ProductItem\"},{\"name\":\"materials\",\"kind\":\"object\",\"type\":\"RecipeMaterial\",\"relationName\":\"RecipeToRecipeMaterial\"}],\"dbName\":null},\"RecipeMaterial\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"recipeId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"recipe\",\"kind\":\"object\",\"type\":\"Recipe\",\"relationName\":\"RecipeToRecipeMaterial\"},{\"name\":\"itemId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"item\",\"kind\":\"object\",\"type\":\"Item\",\"relationName\":\"MaterialItem\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"}],\"dbName\":null},\"Corpse\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"npcId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"decayStage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"causeOfDeath\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isWaterlogged\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"AnimalPopulation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"species\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"population\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"areaId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"area\",\"kind\":\"object\",\"type\":\"WildArea\",\"relationName\":\"AnimalPopulationToWildArea\"}],\"dbName\":null},\"Language\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isAncient\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"region\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"speakers\",\"kind\":\"object\",\"type\":\"NPC\",\"relationName\":\"LanguageToNPC\"},{\"name\":\"userLanguages\",\"kind\":\"object\",\"type\":\"UserLanguage\",\"relationName\":\"LanguageToUserLanguage\"}],\"dbName\":null},\"UserLanguage\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserLanguage\"},{\"name\":\"languageId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"language\",\"kind\":\"object\",\"type\":\"Language\",\"relationName\":\"LanguageToUserLanguage\"},{\"name\":\"fluency\",\"kind\":\"scalar\",\"type\":\"Int\"}],\"dbName\":null},\"Religion\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"originRegion\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"doctrine\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"influenceLevel\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"estimatedFollowers\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"artifacts\",\"kind\":\"object\",\"type\":\"Artifact\",\"relationName\":\"ArtifactToReligion\"},{\"name\":\"followers\",\"kind\":\"object\",\"type\":\"NPC\",\"relationName\":\"NPCToReligion\"}],\"dbName\":null},\"Artifact\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lore\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"powerHint\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"religionId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"religion\",\"kind\":\"object\",\"type\":\"Religion\",\"relationName\":\"ArtifactToReligion\"}],\"dbName\":null},\"GlobalEvent\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"affectedRegion\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"durationDays\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"impact\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"startedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Weather\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"cityId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"city\",\"kind\":\"object\",\"type\":\"City\",\"relationName\":\"CityToWeather\"},{\"name\":\"condition\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"NPCStory\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"npcId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"npc\",\"kind\":\"object\",\"type\":\"NPC\",\"relationName\":\"NPCToNPCStory\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"summary\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"PlayerTitle\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PlayerTitleToUser\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"region\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"grantedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"authority\",\"kind\":\"scalar\",\"type\":\"Int\"}],\"dbName\":null},\"Economy\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"cityId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"city\",\"kind\":\"object\",\"type\":\"City\",\"relationName\":\"CityToEconomy\"},{\"name\":\"item\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"demand\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"supply\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"WorldTime\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lastSimulated\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"WorldSnapshot\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"label\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"jsonData\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"TaxPolicy\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"region\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rate\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

